name: service-ci

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build_all:
    name: Simulate Build & push Docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

  build_service1:
    name: Simulate Build & push Docker image for service1
    runs-on: ubuntu-latest

    steps:
      - name: Simulating building service1 Docker image
        run: echo "Simulating building and pushing service1 Docker image."

      - name: Check if commit hash matches
        run: |
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse HEAD:service1)" ]; then
            echo "Commit hash of the triggering commit does not match the commit hash of the service1 folder."
            exit 1
          fi

  build_service2:
    name: Simulate Build & push Docker image for service2
    runs-on: ubuntu-latest

    steps:
      - name: Simulating building service2 Docker image
        run: echo "Simulating building and pushing service2 Docker image."

      - name: Check if commit hash matches
        run: |
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse HEAD:service2)" ]; then
            echo "Commit hash of the triggering commit does not match the commit hash of the service2 folder."
            exit 1
          fi

  build_teams:
    name: Simulate Build & push Docker image for teams
    runs-on: ubuntu-latest

    steps:
      - name: Simulating building teams Docker image
        run: echo "Simulating building and pushing teams Docker image."

      - name: Check if commit hash matches
        run: |
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse HEAD:teams)" ]; then
            echo "Commit hash of the triggering commit does not match the commit hash of the teams folder."
            exit 1
          fi

  build_gateway:
    name: Simulate Build & push Docker image for gateway
    runs-on: ubuntu-latest

    steps:
      - name: Simulating building gateway Docker image
        run: echo "Simulating building and pushing gateway Docker image."

      - name: Check if commit hash matches
        run: |
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse HEAD:gateway)" ]; then
            echo "Commit hash of the triggering commit does not match the commit hash of the gateway folder."
            exit 1
          fi
